#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Openwrt Images Actions

on: 
  # push: 
  #   branches:
  #     - master
  #schedule:
  #  - cron: 30 13 * * 6
  workflow_dispatch:

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  SCKEY: ${{ secrets.SCKEY }}
  SERVERCHAN_SCKEY: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    
    name: Build Image
    strategy:
      fail-fast: false
        
    steps:
    - name: Checkout
      uses: actions/checkout@main
  
    - name: Load Settings
      run: |
        source "${GITHUB_WORKSPACE}/devices/common/settings.ini"
        echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
        echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV
        echo "CONFIG_FILE=${CONFIG_FILE}" >> $GITHUB_ENV
        echo "DIY_SH=${DIY_SH}" >> $GITHUB_ENV
        echo "UPLOAD_FIRMWARE_TO_COWTRANSFER=${UPLOAD_FIRMWARE_TO_COWTRANSFER}" >> $GITHUB_ENV
        echo "UPLOAD_FIRMWARE_TO_WETRANSFER=${UPLOAD_FIRMWARE_TO_WETRANSFER}" >> $GITHUB_ENV

    - name: Grant permissions
      run: |
        chmod +x ${GITHUB_WORKSPACE}/scripts/*.sh

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        ${GITHUB_WORKSPACE}/scripts/init_env.sh

    - name: Clone source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Load custom configuration
      run: |
        cd openwrt
        echo "Apply files..."
        mv ${GITHUB_WORKSPACE}/devices/common/$CONFIG_FILE .config
        chmod +x ${GITHUB_WORKSPACE}/devices/common/$DIY_SH
        ${GITHUB_WORKSPACE}/devices/common/$DIY_SH
        make defconfig

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j1 V=s
        echo "::set-output name=status::success"

    - name: Organize files
      id: organize
      run: |
        mkdir firmware && find openwrt/bin/targets/*/*/ -maxdepth 1 \
        -name "*combined*" \
        -or -name "*sysupgrade*" \
        -or -name "*armvirt-64-default-rootfs*" \
        -or -name "sha256sums" \
        | xargs -i mv -f {} ./firmware/
        cp openwrt/.config  ./firmware/config
        cd firmware
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
 
    - name: Upload firmware to cowtransfer
      if: env.UPLOAD_FIRMWARE_TO_COWTRANSFER == 'true'
      continue-on-error: true
      run: |
        curl -fsSL git.io/file-transfer | sh
        cowurl=$(./transfer cow --block 2621440 -s --no-progress ${FIRMWARE})
        cowurl=$(echo $cowurl | grep -o -E "https[^ ]*")
        echo "COWURL=$cowurl" >> $GITHUB_ENV
        echo "Download Link: ${{ env.EMOJI }} $cowurl ${{ env.EMOJI }} ðŸš€"
 
    - name: Upload firmware to WeTransfer
      if: env.UPLOAD_FIRMWARE_TO_WETRANSFER == 'true'
      continue-on-error: true
      run: |
        curl -fsSL git.io/file-transfer | sh
        wetrans=$(./transfer wet -s -p 16 --no-progress ${FIRMWARE})
        wetrans=$(echo $wetrans | grep -o -E "https[^ ]*")
        echo "WETRANS=$wetrans" >> $GITHUB_ENV
        echo "Download Link: ${{ env.EMOJI }} $wetrans ${{ env.EMOJI }} ðŸš€"