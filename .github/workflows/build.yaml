name: OpenWrt Image

on: 
  # push: 
  #   branches:
  #     - main
  #schedule:
  #  - cron: 30 13 * * 6
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede.git
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config

jobs:
  Build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
        
    steps:
    - name: Checkout
      uses: actions/checkout@main
    
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: bash ./scripts/install-dependencies.sh

    - name: Get Sources
      run: bash ./scripts/get_sources.sh

    - name: Compile the firmware
      id: compile
      working-directory: /workdir/openwrt
      run: |
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"

    - name: Organize files
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware to file.io
      id: upload
      if: steps.organize.outputs.status == 'success'
      run: |
        cd $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        echo "Uploading firmware..."
        echo "DOWNLOAD_LINKS<<EOF" >> $GITHUB_ENV
        echo "Firmware download links:" >> $GITHUB_ENV
        for file in *; do
          if [[ $file == *"rootfs"* || $file == *".manifest" || $file == *".kernel" || $file == *".json" ]]; then
            continue
          fi
          chmod +x $GITHUB_WORKSPACE/fileio
          link=$($GITHUB_WORKSPACE/fileio --downloads 50 "$file" | grep "File link" | cut -d' ' -f2)
          if [ ! -z "$link" ]; then
            echo "- $file: $link" >> $GITHUB_ENV
          fi
        done
        echo "EOF" >> $GITHUB_ENV

    - name: Show download links
      if: steps.upload.outcome == 'success' && !cancelled()
      run: |
        echo "::group::Download Links"
        echo "${{ env.DOWNLOAD_LINKS }}"
        echo "::endgroup::"

    - name: Delete old workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3