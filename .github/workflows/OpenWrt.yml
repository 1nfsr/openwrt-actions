
name: Openwrt Actions

on: 
  workflow_dispatch:

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  SCKEY: ${{ secrets.SCKEY }}
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: master
  CONFIG_FILE: origin/config
  UPLOAD_FIRMWARE_TO_WETRANSFER: true
  UPLOAD_FIRMWARE_TO_COWTRANSFER: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    name: Build OpenWrt
    strategy:
      fail-fast: false
        
    steps:
    - name: Checkout
      uses: actions/checkout@main
  
    - name: Grant permissions
      run: |
        chmod +x ${GITHUB_WORKSPACE}/scripts/*.sh

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        ${GITHUB_WORKSPACE}/scripts/init_env.sh

    - name: Clone source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j1 V=s
        echo "::set-output name=status::success"

    - name: Organize files
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"
 
    - name: Upload firmware to cowtransfer
      if: env.UPLOAD_FIRMWARE_TO_COWTRANSFER == 'true'
      continue-on-error: true
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-env name=COWTRANSFER_URL::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
 
    - name: Upload firmware to WeTransfer
      if: env.UPLOAD_FIRMWARE_TO_WETRANSFER == 'true'
      continue-on-error: true
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-env name=WETRANSFER_URL::$(cat wetransfer.log | grep https | cut -f3 -d" ")"
        
    - name: WeChat notification
      if: env.SCKEY
      run: |
        ${GITHUB_WORKSPACE}/scripts/serverchan.sh